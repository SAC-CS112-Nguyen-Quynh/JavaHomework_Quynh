 Quynh Nguyen 
 Week 6 Homework Exercises 3.1 – 3.4 

3.1
a) Each class declaration that begins with keyword a) public. must be stored in a file that
has exactly the same name as the class and ends with the .java file-name extension.
b) Keyword b) class. in a class declaration is followed immediately by the class’s name.
c) Keyword c) new. requests memory from the system to store an object, then calls the
corresponding class’s constructor to initialize the object.
d) Each parameter must specify both a type(n) and a(name) .
e) By default, classes that are compiled in the same directory are considered to be in the
same package, known as the . e) default package
f) When each object of a class maintains its own copy of an attribute, the field that represents
the attribute is also known as a(n) . f) instance variable
g) Java provides two primitive types for storing floating-point numbers in memory: g) float,
and double..
h) Variables of type double represent h) double-precision. floating-point numbers.
i) Scanner method i) nextDouble returns a double value.
j) Keyword public is an access . j)modifier.
k) Return type k) void indicates that a method will not return a value.
l) Scanner method l) nextLine reads characters until it encounters a newline character,
then returns those characters as a String.
m) Class String is in package . m) java.lang.
n) A(n) n) import declaration.. is not required if you always refer to a class with its fully qualified class
name.

o) A(n) o) floating-point number.is a number with a decimal point, such as 7.33, 0.0975 or 1000.12345.
p) Variables of type float represent p) single-precision floating-point numbers.
q) The format specifier q) %f. is used to output values of type float or double.
r) Types in Java are divided into two categories r) primitive, types and reference types.
3.2 State whether each of the following is true or false. If false, explain why.
a) By convention, method names begin with an uppercase first letter, and all subsequent
words in the name begin with a capital first letter. a) False. By convention, method names begin with a lowercase first letter and all subsequent words in the name begin with a capital first letter. 
b) An import declaration is not required when one class in a package uses another in the
same package. b)True.
c) Empty parentheses following a method name in a method declaration indicate that the
method does not require any parameters to perform its task. c) True
d) Variables or methods declared with access modifier private are accessible only to methods
of the class in which they’re declared. d)True.
e) A primitive-type variable can be used to invoke a method. 
e) False. A primitive-type variable cannot be used to invoke a method—a reference to an object is required to invoke the object’s methods.
f) Variables declared in the body of a particular method are known as instance variables
and can be used in all methods of the class. f) False. Such variables are called local variables and  can be used only in the method in which they’re declared.
g) Every method’s body is delimited by left and right braces ({ and }). g) True.
h) Primitive-type local variables are initialized by default.  h) False. Primitive-type instance variables are initialized by default. Each local variable must explicitly be assigned a value.
i) Reference-type instance variables are initialized by default to the value null. i) True
j) Any class that contains public static void main( String[] args ) can be used to execute
an application. True
k) The number of arguments in the method call must match the number of parameters in
the method declaration’s parameter list. k) True.
l) Floating-point values that appear in source code are known as floating-point literals and
are type float by default. l) False. Such literals are of type double by default.
3.3 What is the difference between a local variable and a field?
A local variable is declared in the body of a method and can be used only from the point at
which it’s declared through the end of the method declaration. A field is declared in a class, but not in the body of any of the class’s methods. Also, fields are accessible to all methods of the class.
3.4 Explain the purpose of a method parameter. What is the difference between a parameter
and an argument
A parameter represents additional information that a method requires to perform its task.
Each parameter required by a method is specified in the method’s declaration. An argument is the actual value for a method parameter. When a method is called, the argument values are passed to the corresponding parameters of the method so that it can perform its task.
